{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAEaA,EAAO,SAACC,GAAD,OACnB,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACvB,mCAAML,EAAMI,QAAQE,KAApB,OACA,kCAAKN,EAAMI,QAAQG,MAAnB,WCFWC,G,MAAW,SAAAR,GACvB,OAAO,qBAAKC,UAAU,YAAf,SAELD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACzB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCJVM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACpB,uBACCZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCoCDG,G,wDAtCb,aAAc,IAAD,8BACZ,gBAeFH,aAAe,SAACI,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAdnC,EAAKC,MAAQ,CACdb,SAAU,GACVU,YAAa,IALF,E,qDAUd,WAAoB,IAAD,OAClBI,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,oBAO1C,WAAS,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAmBpB,EAASqB,QAAQ,SAAA1B,GAAO,OAChDA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAEhD,OACE,sBAAK9B,UAAU,MAAf,UACA,kDACA,cAAC,EAAD,CACCW,YAAY,kBACZC,aAAee,KAAKf,eAEtB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAjCNI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d29c2ccf.chunk.js","sourcesContent":["import React from 'react';\nimport './card.style.css';\nexport const Card = (props) =>(\n\t<div className='card-container'>\n\t  <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n\t\t<h2> {props.monster.name} </h2>\n\t\t<p> {props.monster.email } </p>\n\t</div>\n)\n","import React from 'react';\nimport { Card } from '../card/card.component'\nimport './card-list.style.css';\n\nexport const CardList = props => {\n\treturn <div className='card-list'>\n\t\t{\n\t\t\tprops.monsters.map(monster => (\n\t\t\t\t<Card key={monster.id} monster={monster} />\n\t\t))}\t\n\t</div>;\n}\n","import React from 'react';\n\nimport './search-box.style.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName='search'\n\t\t\t\t\t\ttype='search' \n\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\tonChange={handleChange} \n\t\t\t\t\t/>\t\n) \n","import React, { Component } from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox} from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n  \tsuper();\n\n    \tthis.state = {\n\t\t\t\tmonsters: [],\n\t\t\t\tsearchField: '' \n\t\t\t};\n\t\t\t\n  }\n\t\n\tcomponentDidMount(){\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response => response.json())\n\t\t\t.then(users => this.setState({monsters: users}));\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({ searchField: e.target.value })\n\t}\n\n\trender(){\n\t\tconst { monsters, searchField } = this.state;\n\t\tconst filteredMonsters = monsters.filter( monster =>\n\t\t\tmonster.name.toLowerCase().includes(searchField.toLowerCase())\n\t\t)\n  \treturn (\n    \t<div className=\"App\">\n\t\t\t\t\t<h1>Monsters Rolodex</h1>\n\t\t\t\t\t<SearchBox \n\t\t\t\t\t\tplaceholder='search monsters'\n\t\t\t\t\t\thandleChange={ this.handleChange }\n \t\t\t\t\t/>\n\t\t\t\t<CardList monsters={filteredMonsters}/>\t\n      </div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}